{"version":3,"sources":["components/TodoComponents/Todo.js","components/TodoComponents/TodoList.js","components/TodoComponents/TodoForm.js","App.js","theme.js","index.js"],"names":["Todo","Card","style","marginBottom","color","CardActionArea","CardContent","Typography","variant","this","props","item","completed","task","CardActions","Button","onClick","toggleItem","id","React","Component","TodoList","todoData","map","key","TodoForm","handleChanges","e","setState","newItem","target","value","handleSubmit","preventDefault","addNewItem","state","handleClear","clearCompleted","AppBar","position","borderRadius","Grid","container","direction","alignItems","onSubmit","TextField","type","name","onChange","size","initialData","App","clickedId","newTodoData","itemText","Date","now","clearedList","filter","Container","maxWidth","gutterBottom","theme","createMuiTheme","palette","primary","main","deepOrange","secondary","amber","A100","error","red","render","ThemeProvider","CssBaseline","document","getElementById"],"mappings":"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","file":"static/js/main.52b86346.chunk.js","sourcesContent":["import React from 'react';\n\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardActions from '@material-ui/core/CardActions';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\n\n\nclass Todo extends React.Component {\n    constructor() {\n        super()\n    }\n\n\n    render() {\n    return (\n    <Card style={{marginBottom: '20px'}} color='primary'>\n    <CardActionArea>\n        <CardContent>\n            <Typography variant='h5' color={this.props.item.completed ? 'primary':''} >{this.props.item.task}</Typography>\n        </CardContent>\n        <CardActions>\n            <Button onClick={() => {this.props.toggleItem(this.props.item.id)}} color={this.props.item.completed ? 'primary' : ''}>Done</Button>\n        </CardActions>\n    </CardActionArea>\n    </Card>\n    )\n    }\n}\n\n\nexport default Todo;","import React from 'react';\nimport Todo from './Todo';\n\nclass TodoList extends React.Component {\n    constructor() {\n        super()\n    }\n\n\n\n    render() {\n        return (\n          <div>\n              {this.props.todoData.map((item) => (<Todo key={item.id} item={item} toggleItem={this.props.toggleItem}/>))}\n          </div>\n        )\n    }\n}\n\nexport default TodoList","import React from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport Grid from '@material-ui/core/Grid';\nimport { TextField, Button } from '@material-ui/core';\n\nclass TodoForm extends React.Component {\n    constructor() {\n        super();\n        this.state = {\n          newItem: \"\"\n        };\n      }\n\n      handleChanges = e => {\n        this.setState({\n          newItem: e.target.value\n        });\n      };\n\n      handleSubmit = e => {\n        e.preventDefault()\n        this.props.addNewItem(this.state.newItem);\n        this.setState({ newItem: \"\" });\n      };\n\n      handleClear = e => {\n          e.preventDefault()\n          this.props.clearCompleted();\n\n      }\n\n    render() {\n        return (\n            <AppBar position='relative' style={{marginBottom: '25px', borderRadius: '2.5px'}}>\n                <Grid container direction='row' alignItems='center'>\n\n       <form onSubmit={this.handleSubmit}><Grid container direction='row' alignItems='center'><TextField\n        variant='outlined'\n          type=\"text\"\n          name=\"newItem\"\n          value={this.state.newItem}\n          onChange={this.handleChanges}\n        />\n        <Button type='submit' size='small'>Add</Button></Grid></form>\n        <Button size='small' onClick={this.handleClear}>Clear complete</Button>\n\n      </Grid>\n      </AppBar>\n        )\n    }\n}\n\nexport default TodoForm;","import React from 'react';\nimport TodoList from './components/TodoComponents/TodoList';\nimport TodoForm from './components/TodoComponents/TodoForm';\n\nimport Container from '@material-ui/core/Container';\nimport { Typography } from '@material-ui/core';\n\nconst initialData = [\n  {\n    task: 'Organize Garage',\n    id: 1528817077286,\n    completed: false\n  },\n  {\n    task: 'Bake Cookies',\n    id: 1528817084358,\n    completed: false\n  }\n];\n\nclass App extends React.Component {\n  // you will need a place to store your state in this component.\n  // design `App` to be the parent component of your application.\n  // this component is going to take care of state, and any change handlers you need to work with your state\n\n  constructor() {\n    super();\n    this.state = {\n      todoData: initialData\n    }\n  }\n\n  toggleItem = (clickedId) => {\n    const newTodoData = this.state.todoData.map(item => {\n      if (item.id === clickedId) {\n        return {\n          ...item,\n          completed: !item.completed\n        }\n      }\n      else {\n        return item;\n      }\n    });\n\n    this.setState({\n      todoData: newTodoData\n    })\n  };\n\n\n  addNewItem = itemText => {\n    const newItem = {\n      task: itemText,\n      id: Date.now(),\n      completed: false\n    };\n    this.setState({\n      todoData: [...this.state.todoData, newItem]\n    })\n  }\n\n  clearCompleted = () => {\n    const clearedList = this.state.todoData.filter((item) => {\n      return !item.completed\n    })\n\n    this.setState({\n      todoData: clearedList\n    })\n\n  }\n\n  render() {\n    return (\n      <Container maxWidth='xs'>\n        <Typography variant='h2' gutterBottom>Welcome to your todo app!</Typography>\n        <TodoForm addNewItem={this.addNewItem} clearCompleted={this.clearCompleted}/>\n        <TodoList todoData={this.state.todoData} toggleItem={this.toggleItem}/>\n        \n      </Container>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\n\nimport {createMuiTheme} from '@material-ui/core/styles'\nimport deepOrange from '@material-ui/core/colors/deepOrange';\nimport amber from '@material-ui/core/colors/amber';\nimport red from '@material-ui/core/colors/red';\n\nconst theme = createMuiTheme({\n    palette: {\n        primary: {main: deepOrange[200]},\n        secondary: {main: amber.A100},\n        error: {main: red[200]},\n        type: \"dark\"\n    }\n})\n\nexport default theme","import React from 'react';\nimport { render } from 'react-dom';\nimport App from './App';\n\nimport {ThemeProvider} from '@material-ui/core/styles';\nimport { CssBaseline } from '@material-ui/core';\n\nimport theme from './theme';\n\nrender( <ThemeProvider theme={theme}><CssBaseline><App /></CssBaseline></ThemeProvider>, document.getElementById('root'));\n"],"sourceRoot":""}